{"ast":null,"code":"var _jsxFileName = \"/Users/Williams/Documents/CS/Website/WRE/WRE-website/src/ModalContainer/ModalContainer.js\";\nimport React, { Component } from \"react\";\nimport { Modal } from \"./Modal\";\nimport TriggerButton from \"./TriggerButton\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class ModalContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isShown: false\n    };\n\n    this.showModal = () => {\n      this.setState({\n        isShown: true\n      }, () => {\n        this.closeButton.focus();\n      });\n      this.toggleScrollLock();\n    };\n\n    this.closeModal = () => {\n      this.setState({\n        isShown: false\n      });\n      this.TriggerButton.focus();\n      this.toggleScrollLock();\n    };\n\n    this.onKeyDown = event => {\n      if (event.keyCode === 27) {\n        this.closeModal();\n      }\n    };\n\n    this.onClickOutside = event => {\n      if (this.modal && this.modal.contains(event.target)) return;\n      this.closeModal();\n    };\n\n    this.toggleScrollLock = () => {\n      document.querySelector(\"html\").classList.toggle(\"scroll-lock\");\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(TriggerButton, {\n        showModal: this.showModal,\n        buttonRef: n => this.TriggerButton = n,\n        triggerText: this.props.triggerText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), this.state.isShown ? /*#__PURE__*/_jsxDEV(Modal, {\n        onSubmit: this.props.onSubmit,\n        modalRef: n => this.modal = n,\n        buttonRef: n => this.closeButton = n,\n        closeModal: this.closeModal,\n        onKeyDown: this.onKeyDown,\n        onClickOutside: this.onClickOutside\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nexport default ModalContainer;","map":{"version":3,"sources":["/Users/Williams/Documents/CS/Website/WRE/WRE-website/src/ModalContainer/ModalContainer.js"],"names":["React","Component","Modal","TriggerButton","ModalContainer","state","isShown","showModal","setState","closeButton","focus","toggleScrollLock","closeModal","onKeyDown","event","keyCode","onClickOutside","modal","contains","target","document","querySelector","classList","toggle","render","n","props","triggerText","onSubmit"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,QAAsB,SAAtB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;AACA,OAAO,MAAMC,cAAN,SAA6BH,SAA7B,CAAuC;AAAA;AAAA;AAAA,SAC5CI,KAD4C,GACpC;AAAEC,MAAAA,OAAO,EAAE;AAAX,KADoC;;AAAA,SAE5CC,SAF4C,GAEhC,MAAM;AAChB,WAAKC,QAAL,CAAc;AAAEF,QAAAA,OAAO,EAAE;AAAX,OAAd,EAAiC,MAAM;AACrC,aAAKG,WAAL,CAAiBC,KAAjB;AACD,OAFD;AAGA,WAAKC,gBAAL;AACD,KAP2C;;AAAA,SAQ5CC,UAR4C,GAQ/B,MAAM;AACjB,WAAKJ,QAAL,CAAc;AAAEF,QAAAA,OAAO,EAAE;AAAX,OAAd;AACA,WAAKH,aAAL,CAAmBO,KAAnB;AACA,WAAKC,gBAAL;AACD,KAZ2C;;AAAA,SAa5CE,SAb4C,GAa/BC,KAAD,IAAW;AACrB,UAAIA,KAAK,CAACC,OAAN,KAAkB,EAAtB,EAA0B;AACxB,aAAKH,UAAL;AACD;AACF,KAjB2C;;AAAA,SAkB5CI,cAlB4C,GAkB1BF,KAAD,IAAW;AAC1B,UAAI,KAAKG,KAAL,IAAc,KAAKA,KAAL,CAAWC,QAAX,CAAoBJ,KAAK,CAACK,MAA1B,CAAlB,EAAqD;AACrD,WAAKP,UAAL;AACD,KArB2C;;AAAA,SAuB5CD,gBAvB4C,GAuBzB,MAAM;AACvBS,MAAAA,QAAQ,CAACC,aAAT,CAAuB,MAAvB,EAA+BC,SAA/B,CAAyCC,MAAzC,CAAgD,aAAhD;AACD,KAzB2C;AAAA;;AA0B5CC,EAAAA,MAAM,GAAG;AACP,wBACE,QAAC,KAAD,CAAO,QAAP;AAAA,8BACE,QAAC,aAAD;AACE,QAAA,SAAS,EAAE,KAAKjB,SADlB;AAEE,QAAA,SAAS,EAAGkB,CAAD,IAAQ,KAAKtB,aAAL,GAAqBsB,CAF1C;AAGE,QAAA,WAAW,EAAE,KAAKC,KAAL,CAAWC;AAH1B;AAAA;AAAA;AAAA;AAAA,cADF,EAMG,KAAKtB,KAAL,CAAWC,OAAX,gBACC,QAAC,KAAD;AACE,QAAA,QAAQ,EAAE,KAAKoB,KAAL,CAAWE,QADvB;AAEE,QAAA,QAAQ,EAAGH,CAAD,IAAQ,KAAKR,KAAL,GAAaQ,CAFjC;AAGE,QAAA,SAAS,EAAGA,CAAD,IAAQ,KAAKhB,WAAL,GAAmBgB,CAHxC;AAIE,QAAA,UAAU,EAAE,KAAKb,UAJnB;AAKE,QAAA,SAAS,EAAE,KAAKC,SALlB;AAME,QAAA,cAAc,EAAE,KAAKG;AANvB;AAAA;AAAA;AAAA;AAAA,cADD,GASG,IAfN;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAmBD;;AA9C2C;AAiD9C,eAAeZ,cAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Modal } from \"./Modal\";\nimport TriggerButton from \"./TriggerButton\";\nexport class ModalContainer extends Component {\n  state = { isShown: false };\n  showModal = () => {\n    this.setState({ isShown: true }, () => {\n      this.closeButton.focus();\n    });\n    this.toggleScrollLock();\n  };\n  closeModal = () => {\n    this.setState({ isShown: false });\n    this.TriggerButton.focus();\n    this.toggleScrollLock();\n  };\n  onKeyDown = (event) => {\n    if (event.keyCode === 27) {\n      this.closeModal();\n    }\n  };\n  onClickOutside = (event) => {\n    if (this.modal && this.modal.contains(event.target)) return;\n    this.closeModal();\n  };\n\n  toggleScrollLock = () => {\n    document.querySelector(\"html\").classList.toggle(\"scroll-lock\");\n  };\n  render() {\n    return (\n      <React.Fragment>\n        <TriggerButton\n          showModal={this.showModal}\n          buttonRef={(n) => (this.TriggerButton = n)}\n          triggerText={this.props.triggerText}\n        />\n        {this.state.isShown ? (\n          <Modal\n            onSubmit={this.props.onSubmit}\n            modalRef={(n) => (this.modal = n)}\n            buttonRef={(n) => (this.closeButton = n)}\n            closeModal={this.closeModal}\n            onKeyDown={this.onKeyDown}\n            onClickOutside={this.onClickOutside}\n          />\n        ) : null}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default ModalContainer;\n"]},"metadata":{},"sourceType":"module"}